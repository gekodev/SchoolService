// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolService.Data;

#nullable disable

namespace SchoolService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231216021858_school-azure-v100")]
    partial class schoolazurev100
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SchoolService.Models.AcademicSession", b =>
                {
                    b.Property<int>("SourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SourcedId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SourcedId"), 100L, null, null, null, null, null);

                    b.Property<string>("EndDate")
                        .HasColumnType("text")
                        .HasColumnName("end_date");

                    b.Property<string>("StartDate")
                        .HasColumnType("text")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("SourcedId")
                        .HasName("pk_academic_session");

                    b.ToTable("academic_session", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Clazz", b =>
                {
                    b.Property<int>("SourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SourcedId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SourcedId"), 100L, null, null, null, null, null);

                    b.Property<string>("CourseSourcedId")
                        .HasColumnType("text")
                        .HasColumnName("course_sourced_id");

                    b.Property<int>("OrgSourcedId")
                        .HasColumnType("integer")
                        .HasColumnName("org_sourced_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("sessionSourcedIds")
                        .HasColumnType("text")
                        .HasColumnName("session_sourced_ids");

                    b.HasKey("SourcedId")
                        .HasName("pk_clazz");

                    b.ToTable("clazz", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Course", b =>
                {
                    b.Property<int>("SourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SourcedId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SourcedId"), 100L, null, null, null, null, null);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("FamilyName")
                        .HasColumnType("text")
                        .HasColumnName("family_name");

                    b.Property<string>("Grade")
                        .HasColumnType("text")
                        .HasColumnName("grade");

                    b.Property<int>("OrgSourcedId")
                        .HasColumnType("integer")
                        .HasColumnName("org_sourced_id");

                    b.Property<string>("SchoolYearSourcedId")
                        .HasColumnType("text")
                        .HasColumnName("school_year_sourced_id");

                    b.Property<int>("Subject")
                        .HasColumnType("integer")
                        .HasColumnName("subject");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("SourcedId")
                        .HasName("pk_course");

                    b.ToTable("course", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Demographic", b =>
                {
                    b.Property<int>("UserSourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserSourcedId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("UserSourcedId"), 100L, null, null, null, null, null);

                    b.Property<string>("BirthCity")
                        .HasColumnType("text")
                        .HasColumnName("birth_city");

                    b.Property<string>("BirthCountry")
                        .HasColumnType("text")
                        .HasColumnName("birth_country");

                    b.Property<string>("BirthDate")
                        .HasColumnType("text")
                        .HasColumnName("birth_date");

                    b.Property<string>("BirthState")
                        .HasColumnType("text")
                        .HasColumnName("birth_state");

                    b.Property<string>("EthnicityCodes")
                        .HasColumnType("text")
                        .HasColumnName("ethnicity_codes");

                    b.Property<string>("RaceCodes")
                        .HasColumnType("text")
                        .HasColumnName("race_codes");

                    b.Property<string>("Sex")
                        .HasColumnType("text")
                        .HasColumnName("sex");

                    b.HasKey("UserSourcedId")
                        .HasName("pk_demographic");

                    b.ToTable("demographic", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Enrollment", b =>
                {
                    b.Property<int>("ClassSourcedId")
                        .HasColumnType("integer")
                        .HasColumnName("class_sourced_id");

                    b.Property<int>("UserSourcedId")
                        .HasColumnType("integer")
                        .HasColumnName("user_sourced_id");

                    b.Property<string>("Role")
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.HasKey("ClassSourcedId", "UserSourcedId")
                        .HasName("pk_enrollment");

                    b.ToTable("enrollment", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Org", b =>
                {
                    b.Property<int>("SourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SourcedId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SourcedId"), 100L, null, null, null, null, null);

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<string>("parentSourcedId")
                        .HasColumnType("text")
                        .HasColumnName("parent_sourced_id");

                    b.HasKey("SourcedId")
                        .HasName("pk_org");

                    b.ToTable("org", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Relationship", b =>
                {
                    b.Property<int>("UserSourcedId")
                        .HasColumnType("integer")
                        .HasColumnName("user_sourced_id");

                    b.Property<string>("RelationshipUserSourcedId")
                        .HasColumnType("text")
                        .HasColumnName("relationship_user_sourced_id");

                    b.Property<string>("RelationshipRole")
                        .HasColumnType("text")
                        .HasColumnName("relationship_role");

                    b.HasKey("UserSourcedId", "RelationshipUserSourcedId")
                        .HasName("pk_relationship");

                    b.ToTable("relationship", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Rol", b =>
                {
                    b.Property<int>("UserSourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserSourcedId"));

                    b.Property<int>("Grade")
                        .HasColumnType("integer")
                        .HasColumnName("grade");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean")
                        .HasColumnName("is_primary");

                    b.Property<int>("OrgSourcedId")
                        .HasColumnType("integer")
                        .HasColumnName("org_sourced_id");

                    b.Property<string>("Role")
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<string>("RoleEndDate")
                        .HasColumnType("text")
                        .HasColumnName("role_end_date");

                    b.Property<string>("RoleStartDate")
                        .HasColumnType("text")
                        .HasColumnName("role_start_date");

                    b.Property<string>("SessionSourcedId")
                        .HasColumnType("text")
                        .HasColumnName("session_sourced_id");

                    b.HasKey("UserSourcedId")
                        .HasName("pk_rol");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Room", b =>
                {
                    b.Property<int>("SisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sis_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SisId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SisId"), 100L, null, null, null, null, null);

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<decimal>("Size")
                        .HasColumnType("numeric")
                        .HasColumnName("size");

                    b.HasKey("SisId")
                        .HasName("pk_room");

                    b.ToTable("room", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.School", b =>
                {
                    b.Property<int>("SisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sis_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SisId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SisId"), 100L, null, null, null, null, null);

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<int>("GradeHigh")
                        .HasColumnType("integer")
                        .HasColumnName("grade_high");

                    b.Property<int>("GradeLow")
                        .HasColumnType("integer")
                        .HasColumnName("grade_low");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("PrincipalName")
                        .HasColumnType("text")
                        .HasColumnName("principal_name");

                    b.Property<string>("PrincipalSecondaryEmail")
                        .HasColumnType("text")
                        .HasColumnName("principal_secondary_email");

                    b.Property<int>("PrincipalSisId")
                        .HasColumnType("integer")
                        .HasColumnName("principal_sis_id");

                    b.Property<int>("SchoolNcesId")
                        .HasColumnType("integer")
                        .HasColumnName("school_nces_id");

                    b.Property<int>("SchoolNumber")
                        .HasColumnType("integer")
                        .HasColumnName("school_number");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("StateId")
                        .HasColumnType("text")
                        .HasColumnName("state_id");

                    b.Property<string>("Zip")
                        .HasColumnType("text")
                        .HasColumnName("zip");

                    b.Property<int>("Zone")
                        .HasColumnType("integer")
                        .HasColumnName("zone");

                    b.HasKey("SisId")
                        .HasName("pk_school");

                    b.ToTable("school", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Section", b =>
                {
                    b.Property<int>("SisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sis_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SisId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SisId"), 100L, null, null, null, null, null);

                    b.Property<string>("CourseDescription")
                        .HasColumnType("text")
                        .HasColumnName("course_description");

                    b.Property<string>("CourseName")
                        .HasColumnType("text")
                        .HasColumnName("course_name");

                    b.Property<int>("CourseNumber")
                        .HasColumnType("integer")
                        .HasColumnName("course_number");

                    b.Property<int>("CourseSisId")
                        .HasColumnType("integer")
                        .HasColumnName("course_sis_id");

                    b.Property<string>("CourseSubject")
                        .HasColumnType("text")
                        .HasColumnName("course_subject");

                    b.Property<int>("Periods")
                        .HasColumnType("integer")
                        .HasColumnName("periods");

                    b.Property<int>("SchoolSisId")
                        .HasColumnType("integer")
                        .HasColumnName("school_sis_id");

                    b.Property<string>("SectionName")
                        .HasColumnType("text")
                        .HasColumnName("section_name");

                    b.Property<int>("SectionNumber")
                        .HasColumnType("integer")
                        .HasColumnName("section_number");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("TermEndate")
                        .HasColumnType("text")
                        .HasColumnName("term_endate");

                    b.Property<string>("TermName")
                        .HasColumnType("text")
                        .HasColumnName("term_name");

                    b.Property<int>("TermSisId")
                        .HasColumnType("integer")
                        .HasColumnName("term_sis_id");

                    b.Property<string>("TermStartDate")
                        .HasColumnType("text")
                        .HasColumnName("term_start_date");

                    b.HasKey("SisId")
                        .HasName("pk_section");

                    b.ToTable("section", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Student", b =>
                {
                    b.Property<int>("SisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sis_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SisId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SisId"), 100L, null, null, null, null, null);

                    b.Property<string>("Birthdate")
                        .HasColumnType("text")
                        .HasColumnName("birthdate");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("Grade")
                        .HasColumnType("text")
                        .HasColumnName("grade");

                    b.Property<int>("GraduationYear")
                        .HasColumnType("integer")
                        .HasColumnName("graduation_year");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text")
                        .HasColumnName("middle_name");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int>("SchoolSisId")
                        .HasColumnType("integer")
                        .HasColumnName("school_sis_id");

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("text")
                        .HasColumnName("secondary_email");

                    b.Property<string>("StateId")
                        .HasColumnType("text")
                        .HasColumnName("state_id");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("integer")
                        .HasColumnName("student_number");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("SisId")
                        .HasName("pk_student");

                    b.ToTable("student", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.StudentEnrollment", b =>
                {
                    b.Property<int>("SectionSisId")
                        .HasColumnType("integer")
                        .HasColumnName("section_sis_id");

                    b.Property<int>("SisId")
                        .HasColumnType("integer")
                        .HasColumnName("sis_id");

                    b.HasKey("SectionSisId", "SisId")
                        .HasName("pk_student_enrollment");

                    b.ToTable("student_enrollment", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Subject", b =>
                {
                    b.Property<int>("SourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SourcedId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SourcedId"), 100L, null, null, null, null, null);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("SourcedId")
                        .HasName("pk_subject");

                    b.ToTable("subject", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.Teacher", b =>
                {
                    b.Property<int>("SisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sis_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SisId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SisId"), 100L, null, null, null, null, null);

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text")
                        .HasColumnName("middle_name");

                    b.Property<string>("Qualification")
                        .HasColumnType("text")
                        .HasColumnName("qualification");

                    b.Property<int>("SchoolSisId")
                        .HasColumnType("integer")
                        .HasColumnName("school_sis_id");

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("text")
                        .HasColumnName("secondary_email");

                    b.Property<string>("StateId")
                        .HasColumnType("text")
                        .HasColumnName("state_id");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<int>("TeacherNumber")
                        .HasColumnType("integer")
                        .HasColumnName("teacher_number");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.Property<string>("password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("SisId")
                        .HasName("pk_teacher");

                    b.ToTable("teacher", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.TeacherRoster", b =>
                {
                    b.Property<int>("SectionSisId")
                        .HasColumnType("integer")
                        .HasColumnName("section_sis_id");

                    b.Property<int>("SisId")
                        .HasColumnType("integer")
                        .HasColumnName("sis_id");

                    b.HasKey("SectionSisId", "SisId")
                        .HasName("pk_teacher_roster");

                    b.ToTable("teacher_roster", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.TimeBlock", b =>
                {
                    b.Property<int>("SisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sis_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SisId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SisId"), 100L, null, null, null, null, null);

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_time");

                    b.Property<int>("Minutes")
                        .HasColumnType("integer")
                        .HasColumnName("minutes");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_time");

                    b.HasKey("SisId")
                        .HasName("pk_time_block");

                    b.ToTable("time_block", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.User", b =>
                {
                    b.Property<int>("SourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SourcedId"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("SourcedId"), 100L, null, null, null, null, null);

                    b.Property<string>("ActiveDirectoryMatchId")
                        .HasColumnType("text")
                        .HasColumnName("active_directory_match_id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FamilyName")
                        .HasColumnType("text")
                        .HasColumnName("family_name");

                    b.Property<string>("GivenName")
                        .HasColumnType("text")
                        .HasColumnName("given_name");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Sms")
                        .HasColumnType("text")
                        .HasColumnName("sms");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.Property<string>("phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("SourcedId")
                        .HasName("pk_user");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("SchoolService.Models.UserFlag", b =>
                {
                    b.Property<int>("UserSourcedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_sourced_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserSourcedId"));

                    b.Property<string>("Flag")
                        .HasColumnType("text")
                        .HasColumnName("flag");

                    b.HasKey("UserSourcedId")
                        .HasName("pk_user_flag");

                    b.ToTable("user_flag", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
